openapi: 3.1.0
info:
  title: VerifAI API
  description: AI Verification System
  version: 1.0.0

servers:
  - url: http://localhost:3002
    description: Local development server
  - url: http://localhost:3000
    description: Local server hosting the OpenAPI spec

components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: GEMINI_API_KEY

  parameters:
    GEMINI_API_KEY:
      name: GEMINI_API_KEY
      in: header
      required: true
      schema:
        type: string
      description: API Key for Gemini service
    DOI_PARAM:
      name: doi
      in: query
      required: true
      schema:
        type: string
        description: DOI of the paper
    TITLE_PARAM:
      name: title
      in: query
      required: true
      schema:
        type: string
        description: Title of the paper

  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
    PaperInfo:
      type: object
      properties:
        title:
          type: string
        authors:
          type: array
          items:
            type: string
        year:
          type: string
        doi:
          type: string
        abstract:
          type: string
        research_field:
          type: object
          properties:
            field:
              type: string
            confidence:
              type: number
        is_retracted:
          type: boolean
        retraction_info:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              doi:
                type: string

paths:
  /api/v1/gemini:
    get:
      summary: Get Gemini Model Info
      description: Retrieves information about the Gemini model.
      security:
        - apiKeyAuth: []
      parameters:
        - $ref: '#/components/parameters/GEMINI_API_KEY'
      responses:
        '200':
          description: Successfully retrieved Gemini model info
          content:
            application/json:
              schema:
                type: object
                properties:
                  model:
                    type: string
                  provider:
                    type: string
                    example: google
        '401':
          description: Unauthorized - Invalid API Key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/firebase:
    get:
      summary: Get Firebase Configuration
      description: Retrieves Firebase configuration details.
      responses:
        '200':
          description: Successfully retrieved Firebase config
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: firestore
                  config_file:
                    type: string
                    example: firebase-adminsdk.json
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/crossref:
    get:
      summary: Retrieve Paper Info from Crossref
      description: Returns paper details by querying the Crossref API using a DOI.
      parameters:
        - $ref: '#/components/parameters/DOI_PARAM'
      responses:
        '200':
          description: Successfully retrieved paper info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaperInfo'
        '400':
          description: Bad Request - Missing or invalid DOI
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/huggingface:
    get:
      summary: Classify Research Field using HuggingFace
      description: Classifies the research field of a paper using its title and abstract (if available).
      parameters:
        - $ref: '#/components/parameters/DOI_PARAM'
      responses:
        '200':
          description: Successfully classified the paper's research field
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaperInfo'
        '400':
          description: Bad Request - Missing or invalid DOI
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/retraction:
    get:
      summary: Check Retraction Status of a Paper
      description: Checks if a paper (using its title) has been retracted according to CrossRef.
      parameters:
        - $ref: '#/components/parameters/TITLE_PARAM'
      responses:
        '200':
          description: Successfully retrieved retraction information
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_retracted:
                    type: boolean
                  retraction_info:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        doi:
                          type: string
        '400':
          description: Bad Request - Missing or invalid title
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

tags:
  - name: Gemini
    description: Endpoints related to Gemini AI model
  - name: Firebase
    description: Endpoints related to Firebase configuration
  - name: CrossRef
    description: Endpoints related to the CrossRef API
  - name: HuggingFace
    description: Endpoints related to HuggingFace model-based classification
  - name: Retraction
    description: Endpoints related to paper retraction checks
